version: "3.5"

services:

  api:
    build:
      context: ./
    image: ${CI_REGISTRY_IMAGE:-api}:${CI_COMMIT_REF:-local}
    container_name: api
    hostname: api
    env_file:
      - ${APP_ENV_FILE:-./envvars.conf}
    expose:
      - "3000"
    ports:
      - "127.0.0.1:3000:3000/tcp"
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/healthcheck"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 10s

  postgres:
    image: postgres:11-alpine
    container_name: postgres
    hostname: postgres
    env_file:
      - ${APP_ENV_FILE:-./envvars.conf}
    ports:
      - "127.0.0.1:5432:5432/tcp"
    expose:
      - "5432"
    volumes:
      - ${DATA_PATH:-/tmp}/joinimpact/postgresql:/var/lib/postgresql/data:rw
    restart: unless-stopped

#  frontend:
#    build:
#      context: ../impact-frontend
#    image: ${CI_REGISTRY_IMAGE:-frontend}:${CI_COMMIT_REF:-local}
#    container_name: frontend
#    hostname: frontend
#    expose:
#      - "80"
#    ports:
#      - "127.0.0.1:8080:80/tcp"
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/healthcheck"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 10s

#  nginx:
#    image: nginx:stable-alpine
#    container_name: nginx
#    hostname: nginx
#    ports:
#      - "80:80/tcp"
#    volumes:
#      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#    restart: unless-stopped
#    depends_on:
#      - api
#      - frontend
#    healthcheck:
#      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/healthcheck"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 10s
